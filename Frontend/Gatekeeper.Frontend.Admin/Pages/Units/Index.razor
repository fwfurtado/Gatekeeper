@page "/units/"
@using Gatekeeper.Frontend.Admin.Dtos
@using Gatekeeper.Frontend.Admin.Services
@using Microsoft.AspNetCore.Authorization

@attribute [Authorize]

@inject UnitService UnitService

<PageTitle>Unit</PageTitle>


<MudButton Variant="Variant.Filled" Color="Color.Primary" Class="mb-4" Link="true" Href="/units/new">Create</MudButton>
<MudTable Hover="true" SortLabel="Sort By" ServerData="@FetchData">
    <HeaderContent>
        <MudTh>
            <MudTableSortLabel InitialDirection="SortDirection.Ascending" SortBy="new Func<UnitResponse, object>(x => x.Id)">#</MudTableSortLabel>
        </MudTh>
        <MudTh>
            <MudTableSortLabel SortBy="new Func<UnitResponse, object>(x => x.Identifier)">Identifier</MudTableSortLabel>
        </MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Id">@context.Id</MudTd>
        <MudTd DataLabel="Identifier">@context.Identifier</MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager PageSizeOptions="new int[] { 10, 20 }"/>
    </PagerContent>
</MudTable>


@code {

    private async Task<TableData<UnitResponse>> FetchData(TableState state)
    {
        var page = state.Page;
        var pageSize = state.PageSize;


        var paged = await UnitService.GetAllAsync(new PageRequest(page, pageSize));

        return new TableData<UnitResponse>
        {
            TotalItems = paged.Total,
            Items = paged.Data
        };
    }

}